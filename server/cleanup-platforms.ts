// ุญุฐู ุงูุงุชุตุงูุงุช ุงูููุฑุฑุฉ ูุฅุตูุงุญ ุงูุญุงูุฉ
import { storage } from './storage';

export async function cleanupDuplicatePlatforms() {
  console.log('๐งน ุชูุธูู ุงูุงุชุตุงูุงุช ุงูููุฑุฑุฉ...');
  
  // ุงุญุฐู ุฌููุน ุงุชุตุงูุงุช MT5 ุงูููุฑุฑุฉ
  const allPlatforms = await storage.getUserPlatforms(2); // User ID 2
  
  console.log(`๐ ุนุฏุฏ ุงูุงุชุตุงูุงุช ุงูููุฌูุฏุฉ: ${allPlatforms.length}`);
  
  // ุงุจูู ููุท ุนูู ุขุฎุฑ ุงุชุตุงู MT5
  const mt5Platforms = allPlatforms.filter(p => p.platform === 'mt5');
  
  if (mt5Platforms.length > 1) {
    console.log(`โ ูุฌุฏ ${mt5Platforms.length} ุงุชุตุงูุงุช MT5 ููุฑุฑุฉ`);
    
    // ุงุญุฐู ุงูุงุชุตุงูุงุช ุงููุฏููุฉุ ุงุจูู ุนูู ุงูุฃุญุฏุซ
    const sortedByDate = mt5Platforms.sort((a, b) => a.id - b.id);
    const toDelete = sortedByDate.slice(0, -1); // ุงุญุฐู ูู ุดูุก ุนุฏุง ุงูุฃุฎูุฑ
    
    for (const platform of toDelete) {
      await storage.deletePlatform(platform.id);
      console.log(`๐๏ธ ุชู ุญุฐู ุงุชุตุงู MT5 ููุฑุฑ (ID: ${platform.id})`);
    }
    
    // ุญุฏุซ ุงูุงุชุตุงู ุงููุชุจูู ููููู ูุชุตู
    const remaining = sortedByDate[sortedByDate.length - 1];
    await storage.updatePlatform(remaining.id, {
      isConnected: true,
      connectionStatus: 'connected'
    });
    
    console.log(`โ ุชู ุชุญุฏูุซ ุงุชุตุงู MT5 (ID: ${remaining.id}) ููููู ูุชุตู`);
  }
  
  console.log('๐ ุชู ุชูุธูู ุงูุงุชุตุงูุงุช ุจูุฌุงุญ!');
}